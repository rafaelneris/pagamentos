<?php

namespace Tests\Domain\Users\Mappers;

use App\Domain\Users\Entities\BalanceEntity;
use App\Domain\Users\Entities\DepositEntity;
use App\Domain\Users\Mappers\DepositMapper;
use Tests\TestCase;

/**
 * Class DepositMapperTest
 * @package Tests\Domain\Users\Mappers
 * @author Rafael Neris <rafaelnerisdj@gmail.com>
 */
class DepositMapperTest extends TestCase
{

    private $depositEntity;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stubs
        $this->setUpDependencies();
    }

    /**
     * @dataProvider provideDepositData
     */
    public function testMap($depositData, $depositEntityExpected)
    {
        $depositMapper = new DepositMapper(new DepositEntity());
        $depositEntity = $depositMapper->map($depositData);
        $this->assertEquals($depositEntityExpected, $depositEntity);
    }

    /**
     * @dataProvider provideDepositData
     */
    public function testRevert($depositDataExpected, $depositEntity)
    {
        $depositMapper = new DepositMapper(new DepositEntity());
        $depositData = $depositMapper->revert($depositEntity);
        $this->assertEquals($depositDataExpected, $depositData);
    }

    public function provideDepositData()
    {
        $depositEntity = $this->makeEntity();
        return [
            [
                [
                    'userId' => '0abcdd94-5cfe-49f2-b64a-16e4e90eb585',
                    'value' => 250.93
                ],
                $depositEntity
            ]
        ];
    }

    private function setUpDependencies()
    {
        $depositEntity = $this->makeEntity();
        $this->depositEntity = $this->createMock(DepositEntity::class);
        $this->depositEntity
            ->method('setUserId')->willReturn($depositEntity);
        $this->depositEntity
            ->method('setValue')->willReturn($depositEntity);
    }

    private function makeEntity()
    {
        $depositEntity = new DepositEntity();
        $depositEntity
            ->setUserId('0abcdd94-5cfe-49f2-b64a-16e4e90eb585')
            ->setValue(250.93);
        return $depositEntity;
    }
}
